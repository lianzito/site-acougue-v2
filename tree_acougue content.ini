site-acougue-v2/
├─ css/
│   └─ style.css
    /* Estilos Gerais */
    body {
        font-family: Arial, sans-serif;
        margin: 0;
        background-color: #f4f4f4;
        color: #333;
    }
    .container {
        width: 90%;
        max-width: 1200px;
        margin: 20px auto;
        padding: 20px;
        background-color: #fff;
        box-shadow: 0 0 10px rgba(0,0,0,0.1);
    }

    /* Header */
    header {
        background-color: #8B0000; /* Vermelho escuro */
        color: white;
        padding: 10px 0;
        border-bottom: 4px solid #c0392b;
    }
    nav {
        display: flex;
        justify-content: space-between;
        align-items: center;
        width: 90%;
        max-width: 1200px;
        margin: 0 auto;
    }
    nav h1 {
        margin: 0;
    }
    nav ul {
        list-style: none;
        margin: 0;
        padding: 0;
        display: flex;
    }
    nav ul li {
        margin-left: 20px;
    }
    nav a {
        color: white;
        text-decoration: none;
        font-weight: bold;
    }

    /* Produtos */
    .produtos-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
        gap: 20px;
    }
    .produto-card {
        border: 1px solid #ddd;
        text-align: center;
        padding: 15px;
    }
    .produto-card img {
        max-width: 100%;
        height: 150px;
        object-fit: cover;
    }
    .produto-card h3 {
        margin: 10px 0;
    }
    .btn {
        display: inline-block;
        padding: 10px 20px;
        background-color: #27ae60;
        color: white;
        text-decoration: none;
        border-radius: 5px;
        border: none;
        cursor: pointer;
    }
    .btn:hover {
        background-color: #2ecc71;
    }

    /* Carrinho */
    .tabela-carrinho {
        width: 100%;
        border-collapse: collapse;
        margin-top: 20px;
    }
    .tabela-carrinho th, .tabela-carrinho td {
        border: 1px solid #ddd;
        padding: 12px;
        text-align: left;
    }
    .tabela-carrinho th {
        background-color: #f2f2f2;
    }
    .total-carrinho {
        text-align: right;
        margin-top: 20px;
        font-size: 1.2em;
        font-weight: bold;
    }
    .btn-checkout {
        background-color: #e67e22;
    }
    .btn-checkout:hover {
        background-color: #f39c12;
    }

    /* Formulários */
    .form-container {
        max-width: 400px;
        margin: 20px auto;
        padding: 20px;
        border: 1px solid #ddd;
    }
    .form-container input {
        width: 95%;
        padding: 10px;
        margin-bottom: 10px;
    }
├─ imagens/
│   └─ (todas as imagens do projeto)
├─ js/
│   └─ main.js
    document.addEventListener('DOMContentLoaded', function() {

        // --- ADICIONAR AO CARRINHO COM AJAX ---
        // Delegação de eventos para todos os formulários com a classe 'form-add-to-cart'
        document.body.addEventListener('submit', function(event) {
            if (event.target.matches('.form-add-to-cart')) {
                event.preventDefault(); // Impede o envio normal do formulário

                const form = event.target;
                const formData = new FormData(form);

                fetch('carrinho_acoes.php', {
                    method: 'POST',
                    headers: {
                        'X-Requested-With': 'XMLHttpRequest' // Identifica a requisição como AJAX
                    },
                    body: formData
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        // Atualiza o contador do carrinho no header
                        const cartBadge = document.querySelector('.navbar-nav .badge');
                        if (cartBadge) {
                            cartBadge.textContent = data.cart_count;
                        }

                        // Exibe o SweetAlert de sucesso
                        Swal.fire({
                            icon: 'success',
                            title: 'Adicionado!',
                            text: data.message,
                            toast: true, // Mostra um alerta menor
                            position: 'top-end', // No canto superior direito
                            showConfirmButton: false,
                            timer: 2000, // Fecha automaticamente após 2 segundos
                            timerProgressBar: true
                        });
                    } else {
                        // Exibe alerta de erro se a resposta indicar falha
                        Swal.fire({
                            icon: 'error',
                            title: 'Oops...',
                            text: data.message || 'Ocorreu um erro.'
                        });
                    }
                })
                .catch(error => {
                    console.error('Erro na requisição:', error);
                    Swal.fire({
                        icon: 'error',
                        title: 'Erro de Conexão',
                        text: 'Não foi possível adicionar o produto ao carrinho.'
                    });
                });
            }
        });

    // --- CONFIRMAÇÃO PARA REMOVER UM ITEM ESPECÍFICO ---
    document.body.addEventListener('click', function(event) {
        // Procura por um clique em um elemento ou pai com a classe .btn-remover-item
        const removeButton = event.target.closest('.btn-remover-item');
        if (removeButton) {
            event.preventDefault(); // Previne o clique padrão do link
            const url = removeButton.href;

            Swal.fire({
                title: 'Remover item?',
                text: "Tem certeza que deseja remover este item do carrinho?",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#d33',
                cancelButtonColor: '#6c757d',
                confirmButtonText: 'Sim, remover!',
                cancelButtonText: 'Cancelar'
            }).then((result) => {
                if (result.isConfirmed) {
                    // Se o usuário confirmar, redireciona para a URL de remover o item
                    window.location.href = url;
                }
            });
        }
    });

    });
├─ acougue_db.sql
├─ carrinho_acoes.php
    <?php
    require_once 'config.php';

    $is_ajax = !empty($_SERVER['HTTP_X_REQUESTED_WITH']) && strtolower($_SERVER['HTTP_X_REQUESTED_WITH']) == 'xmlhttprequest';

    if (isset($_POST['acao'])) {

        if ($_POST['acao'] == 'add' && isset($_POST['id'])) {
            $id_produto = (int)$_POST['id'];
            $quantidade = isset($_POST['quantidade']) ? (float)$_POST['quantidade'] : 1;

            if ($quantidade > 0) {
                if (isset($_SESSION['carrinho'][$id_produto])) {
                    $_SESSION['carrinho'][$id_produto] += $quantidade;
                } else {
                    $_SESSION['carrinho'][$id_produto] = $quantidade;
                }
            }
            
            if ($is_ajax) {
                header('Content-Type: application/json');
                echo json_encode([
                    'success' => true,
                    'message' => 'Produto adicionado com sucesso!',
                    'cart_count' => isset($_SESSION['carrinho']) ? count($_SESSION['carrinho']) : 0
                ]);
                exit;
            }
        }

        if ($_POST['acao'] == 'up' && isset($_POST['id']) && isset($_POST['quantidade'])) {
            $id_produto = (int)$_POST['id'];
            $quantidade = (float)$_POST['quantidade'];

            if ($quantidade > 0 && isset($_SESSION['carrinho'][$id_produto])) {
            $_SESSION['carrinho'][$id_produto] = $quantidade;
            } else {
            unset($_SESSION['carrinho'][$id_produto]);
            }
        }
    }

    if (isset($_GET['acao'])) {

        if ($_GET['acao'] == 'del' && isset($_GET['id'])) {
            $id_produto = (int)$_GET['id'];
            if (isset($_SESSION['carrinho'][$id_produto])) {
                unset($_SESSION['carrinho'][$id_produto]);
            }
        }

        if ($_GET['acao'] == 'limpar') {
            unset($_SESSION['carrinho']);
            $_SESSION['flash_message'] = ['type' => 'info', 'text' => 'Seu carrinho foi esvaziado.'];
        }
    }

    header('location: carrinho.php');
    exit;
    ?>
├─ carrinho.php
    <?php include 'header.php'; ?>

    <div class="container">
        <h2 class="mb-4">Seu Carrinho de Compras</h2>
        <?php
        if (isset($_SESSION['carrinho']) && !empty($_SESSION['carrinho'])) {
            $ids_produtos = implode(',', array_keys($_SESSION['carrinho']));
            $sql = "SELECT * FROM produtos WHERE id IN ($ids_produtos)";
            $total_geral = 0;
        ?>
        <div class="table-responsive">
            <table class="table align-middle">
                <thead class="table-light">
                    <tr>
                        <th scope="col">Produto</th>
                        <th scope="col" class="text-center">Preço Unit.</th>
                        <th scope="col" class="text-center">Quantidade (kg)</th>
                        <th scope="col" class="text-center">Subtotal</th>
                        <th scope="col" class="text-center">Remover</th>
                    </tr>
                </thead>
                <tbody>
                    <?php
                    if ($result = mysqli_query($link, $sql)) {
                        while ($produto = mysqli_fetch_assoc($result)) {
                            $id_produto = $produto['id'];
                            $quantidade = $_SESSION['carrinho'][$id_produto];
                            $subtotal = $produto['preco'] * $quantidade;
                            $total_geral += $subtotal;
                    ?>
                    <tr>
                        <td>
                            <div class="d-flex align-items-center">
                                <img src="<?php echo htmlspecialchars($produto['imagem']); ?>" style="width: 80px; height: 80px; object-fit: cover; border-radius: 8px;" class="me-3">
                                <strong><?php echo htmlspecialchars($produto['nome']); ?></strong>
                            </div>
                        </td>
                        <td class="text-center">R$ <?php echo number_format($produto['preco'], 2, ',', '.'); ?></td>
                        <td class="text-center">
                            <form action="carrinho_acoes.php" method="post" class="d-inline-flex justify-content-center">
                                <input type="hidden" name="acao" value="up">
                                <input type="hidden" name="id" value="<?php echo $id_produto; ?>">
                                <div class="input-group" style="max-width: 150px;">
                                    <input type="number" name="quantidade" class="form-control" value="<?php echo $quantidade; ?>" min="0.1" step="0.1">
                                    <button type="submit" class="btn btn-outline-secondary" title="Atualizar quantidade">
                                        <i class="bi bi-arrow-clockwise"></i> </button>
                                </div>
                            </form>
                        </td>
                        <td class="text-center"><strong>R$ <?php echo number_format($subtotal, 2, ',', '.'); ?></strong></td>
                        <td class="text-center">
                            <a href="carrinho_acoes.php?acao=del&id=<?php echo $id_produto; ?>" class="btn btn-outline-danger btn-sm btn-remover-item" title="Remover item">
                                <i class="bi bi-x-lg"></i> </a>
                        </td>
                    </tr>
                    <?php
                        }
                        mysqli_free_result($result);
                    }
                    ?>
                </tbody>
            </table>
        </div>

        <div class="d-flex justify-content-between align-items-center mt-4 flex-wrap">
            <div>
                <a href="produtos.php" class="btn btn-outline-secondary">Continuar Comprando</a>
                <a href="carrinho_acoes.php?acao=limpar" class="btn btn-outline-danger btn-limpar-carrinho">Limpar Carrinho</a>
            </div>
            <div class="text-end">
                <h4>Total: <span class="text-danger">R$ <?php echo number_format($total_geral, 2, ',', '.'); ?></span></h4>
                <div class="d-grid gap-2 d-md-block">
                    <a href="checkout.php" class="btn btn-primary btn-lg">Finalizar Compra</a>
                </div>
            </div>
        </div>

        <?php
        } else {
            echo "<div class='alert alert-info text-center'>Seu carrinho está vazio. <a href='produtos.php'>Ver produtos</a>.</div>";
        }
        mysqli_close($link);
        ?>
    </div>

    <?php include 'footer.php'; ?>
├─ checkout.php
    <?php
    require_once 'config.php';

    if (!isset($_SESSION['loggedin']) || $_SESSION['loggedin'] !== true) {
        $_SESSION['flash_message'] = ['type' => 'warning', 'text' => 'Você precisa fazer login para finalizar a compra!'];
        header('location: login.php');
        exit;
    }
    if (!isset($_SESSION['carrinho']) || empty($_SESSION['carrinho'])) {
        header('location: carrinho.php');
        exit;
    }
    if (empty($_SESSION['cpf'])) {
        $_SESSION['flash_message'] = ['type' => 'warning', 'text' => 'É necessário ter um CPF cadastrado para finalizar a compra. Por favor, atualize seus dados em Minha Conta.'];
        header('location: minha_conta.php');
        exit;
    }

    function callAsaasAPI(string $method, string $url, array|string|null $data = null) {
        $curl = curl_init();
        $headers = [
            'Content-Type: application/json',
            'access_token: ' . ASAAS_API_KEY,
            'User-Agent: Acougue Nosso'
        ];
        curl_setopt($curl, CURLOPT_URL, ASAAS_API_URL . $url);
        curl_setopt($curl, CURLOPT_HTTPHEADER, $headers);
        curl_setopt($curl, CURLOPT_RETURNTRANSFER, 1);
        if ($method == "POST") {
            curl_setopt($curl, CURLOPT_POST, 1);
            if ($data) curl_setopt($curl, CURLOPT_POSTFIELDS, $data);
        }
        $result = curl_exec($curl);
        $http_code = curl_getinfo($curl, CURLINFO_HTTP_CODE);
        $curl_error = curl_error($curl);
        curl_close($curl);
        return ['body' => json_decode($result, true), 'raw_body' => $result, 'http_code' => $http_code, 'curl_error' => $curl_error];
    }

    $total_geral = 0;
    $itens_pedido_array = [];
    $ids_produtos = implode(',', array_map('intval', array_keys($_SESSION['carrinho'])));
    $sql_produtos = "SELECT id, nome, preco FROM produtos WHERE id IN ($ids_produtos)";
    $result_produtos = mysqli_query($link, $sql_produtos);

    if ($result_produtos) {
        while ($produto = mysqli_fetch_assoc($result_produtos)) {
            $quantidade = $_SESSION['carrinho'][$produto['id']];
            $total_geral += $produto['preco'] * $quantidade;
            $itens_pedido_array[] = ['nome' => $produto['nome'], 'quantidade' => $quantidade, 'preco_unitario' => $produto['preco']];
        }
    }
    $itens_pedido_json = json_encode($itens_pedido_array);

    try {
        $asaas_customer_id = null;
        $api_response_get = callAsaasAPI('GET', '/customers?cpfCnpj=' . $_SESSION['cpf']);

        if ($api_response_get['http_code'] >= 300) throw new Exception("Falha ao buscar cliente na Asaas.");

        if (!empty($api_response_get['body']['data'])) {
            $asaas_customer_id = $api_response_get['body']['data'][0]['id'];
        } else {
            $customer_data = json_encode(["name" => $_SESSION['nome'], "email" => $_SESSION['email'], "cpfCnpj" => $_SESSION['cpf']]);
            $api_response_create = callAsaasAPI('POST', '/customers', $customer_data);
            if (isset($api_response_create['body']['id'])) {
                $asaas_customer_id = $api_response_create['body']['id'];
            } else {
                throw new Exception("Não foi possível criar seu cadastro na plataforma de pagamentos.");
            }
        }

        if ($asaas_customer_id) {
            $sql_insert_pedido = "INSERT INTO pedidos (id_usuario, valor_total, status, itens_pedido, data_criacao) VALUES (?, ?, 'PENDING', ?, NOW())";
            if ($stmt = mysqli_prepare($link, $sql_insert_pedido)) {
                mysqli_stmt_bind_param($stmt, "ids", $_SESSION['id'], $total_geral, $itens_pedido_json);
                mysqli_stmt_execute($stmt);
                $pedido_id_local = mysqli_insert_id($link);
                mysqli_stmt_close($stmt);
            } else {
                throw new Exception("Não foi possível registrar o pedido no banco de dados.");
            }

            if (!$pedido_id_local) throw new Exception("Falha ao obter ID do novo pedido.");

            $protocol = (!empty($_SERVER['HTTPS']) && $_SERVER['HTTPS'] !== 'off') ? "https://" : "http://";
            $baseUrl = $protocol . $_SERVER['HTTP_HOST'] . dirname($_SERVER['PHP_SELF']);
            if (substr($baseUrl, -1) !== '/') $baseUrl .= '/';

            $payment_link_data = json_encode([
                'name' => 'Pedido #' . $pedido_id_local . ' para ' . $_SESSION['nome'],
                'customer' => $asaas_customer_id,
                'billingType' => 'UNDEFINED',
                'chargeType' => 'DETACHED',
                'dueDateLimitDays' => 2,
                'value' => $total_geral,
                'description' => 'Pedido #' . $pedido_id_local . ' - Açougue Nosso',
                'externalReference' => (string)$pedido_id_local,
                // 'redirectUrl' => $baseUrl . 'index.php', // servidor local 
                'redirectUrl' => 'https://54f6-191-13-80-193.ngrok-free.app/acougue-Asaas/index.php', // servidor gnork
            ]);

            $api_response_link = callAsaasAPI('POST', '/paymentLinks', $payment_link_data);
            
            if (!isset($api_response_link['body']['id'])) {
                mysqli_query($link, "DELETE FROM pedidos WHERE id = $pedido_id_local");
                throw new Exception("Falha ao gerar o link de pagamento. Resposta: " . htmlspecialchars($api_response_link['raw_body']));
            }

            $response_link = $api_response_link['body'];
            
            $sql_update_pedido = "UPDATE pedidos SET id_asaas_cobranca = ?, link_pagamento = ? WHERE id = ?";
            if ($stmt_update = mysqli_prepare($link, $sql_update_pedido)) {
                mysqli_stmt_bind_param($stmt_update, "ssi", $response_link['id'], $response_link['url'], $pedido_id_local);
                mysqli_stmt_execute($stmt_update);
                mysqli_stmt_close($stmt_update);
            }

            unset($_SESSION['carrinho']);
            header("Location: " . $response_link['url']);
            exit();
        }

    } catch (Exception $e) {
        $_SESSION['flash_message'] = ['type' => 'danger', 'text' => 'ERRO: ' . $e->getMessage()];
        header('location: carrinho.php');
        exit;
    }

    mysqli_close($link);
    ?>
├─ composer.lock
    {
        "_readme": [
            "This file locks the dependencies of your project to a known state",
            "Read more about it at https://getcomposer.org/doc/01-basic-usage.md#installing-dependencies",
            "This file is @generated automatically"
        ],
        "content-hash": "8d070178755c320c69f93ee4800660ef",
        "packages": [],
        "packages-dev": [],
        "aliases": [],
        "minimum-stability": "stable",
        "stability-flags": {},
        "prefer-stable": false,
        "prefer-lowest": false,
        "platform": {},
        "platform-dev": {},
        "plugin-api-version": "2.6.0"
    }
├─ composer.phar
├─ config.php
    <?php
    session_start();

    define('DB_SERVER', 'localhost');
    define('DB_USERNAME', 'root');
    define('DB_PASSWORD', '');
    define('DB_NAME', 'acougue_db');

    $link = mysqli_connect(DB_SERVER, DB_USERNAME, DB_PASSWORD, DB_NAME);

    if($link === false){
        die("ERRO: Não foi possível conectar. " . mysqli_connect_error());
    }

    mysqli_set_charset($link, "utf8");

    // Você pode obter sua chave em: https://www.asaas.com/
    define('ASAAS_API_KEY', '$aact_hmlg_000MzkwODA2MWY2OGM3MWRlMDU2NWM3MzJlNzZmNGZhZGY6OmQyMzU5ZDYyLTQwNTItNDZmOS1hMzJhLTkxM2FlNjcxYmVkODo6JGFhY2hfODIzZDg1YjQtY2Y1ZC00NDcyLWI2ZTQtOGRkOTk4YzY2YmZk');

    // Para usar o ambiente de produção, troque 'sandbox.asaas.com' por 'api.asaas.com'
    define('ASAAS_API_URL', 'https://sandbox.asaas.com/api/v3');

    define('ASAAS_WEBHOOK_SECRET', 'acougue_webhook_2025');

    ?>
├─ footer.php
        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" ...></script>
        
        <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
        
        <script src="js/main.js"></script>
    </body>
    </html>
├─ header.php
    <?php require_once 'config.php'; ?>
    <!DOCTYPE html>
    <html lang="pt-br">
    <head>
        <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" ...>
        
        <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">
        
        <link rel="stylesheet" href="css/style.css">
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Açougue Online</title>

        <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
        
        <link rel="stylesheet" href="css/style.css">
    </head>
    <body>
        <header>
            <nav class="navbar navbar-expand-lg navbar-dark" style="background-color: #8B0000;">
                <div class="container-fluid">
                    <a class="navbar-brand" href="index.php">Açougue Nosso</a>
                    <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav">
                        <span class="navbar-toggler-icon"></span>
                    </button>
                    <div class="collapse navbar-collapse" id="navbarNav">
                        <ul class="navbar-nav ms-auto">
                            <li class="nav-item">
                                <a class="nav-link" href="produtos.php">Produtos</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" href="carrinho.php">
                                    Carrinho <span class="badge bg-light text-dark"><?php echo isset($_SESSION['carrinho']) ? count($_SESSION['carrinho']) : 0; ?></span>
                                </a>
                            </li>
                            <?php if (isset($_SESSION['loggedin']) && $_SESSION['loggedin'] === true): ?>
                                <li class="nav-item dropdown">
                                    <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button" data-bs-toggle="dropdown">
                                        Olá, <?php echo htmlspecialchars($_SESSION['nome']); ?>
                                    </a>
                                    <ul class="dropdown-menu dropdown-menu-end">
                                        <li><a class="dropdown-item" href="pedidos.php">Meus Pedidos</a></li>
                                        <li><a class="dropdown-item" href="minha_conta.php">Minha Conta</a></li>
                                        <li><hr class="dropdown-divider"></li>
                                        <li><a class="dropdown-item" href="logout.php">Logout</a></li>
                                    </ul>
                                </li>
                            <?php else: ?>
                                <li class="nav-item">
                                    <a class="nav-link" href="login.php">Login / Cadastro</a>
                                </li>
                            <?php endif; ?>
                        </ul>
                    </div>
                </div>
            </nav>
        </header>
        <main class="container my-4"> <?php
            if (isset($_SESSION['flash_message'])) {
                $message = $_SESSION['flash_message'];
                unset($_SESSION['flash_message']);
                echo '<div class="alert alert-' . $message['type'] . ' alert-dismissible fade show" role="alert">';
                echo $message['text'];
                echo '<button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>';
                echo '</div>';
            }
            ?>
    </body>
    </html>
├─ index.php
    <?php include 'header.php'; ?>

    <div class="p-5 mb-4 bg-light rounded-3 text-center">
        <div class="container-fluid py-5">
            <h1 class="display-5 fw-bold">Bem-vindo ao Açougue Nosso</h1>
            <p class="fs-4">Desde 1985, oferecendo as melhores carnes com a tradição e a qualidade que sua família merece.</p>
            <p>Selecionamos nossos produtos com rigor para garantir o máximo de sabor e frescor no seu churrasco e nas suas refeições do dia a dia. Navegue por nossas categorias e descubra a diferença que a qualidade faz.</p>
            <a href="produtos.php" class="btn btn-danger btn-lg mt-3">Ver Nossos Produtos</a>
        </div>
    </div>

    <div class="row text-center">
        <div class="col-md-4">
            <h4>Qualidade Garantida</h4>
            <p>Carnes frescas e de procedência controlada.</p>
        </div>
        <div class="col-md-4">
            <h4>Tradição no Corte</h4>
            <p>Cortes especiais feitos por quem entende do assunto.</p>
        </div>
        <div class="col-md-4">
            <h4>Atendimento Especial</h4>
            <p>Estamos prontos para ajudar você a escolher a melhor peça.</p>
        </div>
    </div>


    <?php 
        mysqli_close($link);
        include 'footer.php'; 
    ?>
├─ login.php
    <?php
    require_once 'config.php';

    function validaCPF($cpf) {
        $cpf = preg_replace( '/[^0-9]/is', '', $cpf );
        if (strlen($cpf) != 11) { return false; }
        if (preg_match('/(\d)\1{10}/', $cpf)) { return false; }
        for ($t = 9; $t < 11; $t++) {
            for ($d = 0, $c = 0; $c < $t; $c++) { $d += $cpf[$c] * (($t + 1) - $c); }
            $d = ((10 * $d) % 11) % 10;
            if ($cpf[$c] != $d) { return false; }
        }
        return true;
    }


    if (isset($_SESSION["loggedin"]) && $_SESSION["loggedin"] === true) {
        header("location: index.php");
        exit;
    }

    $erro_cadastro = $erro_login = "";

    if ($_SERVER["REQUEST_METHOD"] == "POST" && isset($_POST['cadastrar'])) {
        
        $nome = trim($_POST["nome"]);
        $email = trim($_POST["email"]);
        $senha = trim($_POST["senha"]);
        $cpf = preg_replace('/[^0-9]/', '', trim($_POST["cpf"]));

        if (empty($nome)) {
            $erro_cadastro = "Por favor, insira seu nome.";
        } elseif (empty($email)) {
            $erro_cadastro = "Por favor, insira um email.";
        } elseif (!validaCPF($cpf)) {
            $erro_cadastro = "O CPF informado não é válido.";
        } elseif (empty($senha)) {
            $erro_cadastro = "Por favor, insira uma senha.";
        } elseif (strlen($senha) < 6) {
            $erro_cadastro = "A senha deve ter pelo menos 6 caracteres.";
        } else {
            $sql = "SELECT id FROM usuarios WHERE email = ? OR cpf = ?";
            if ($stmt = mysqli_prepare($link, $sql)) {
                mysqli_stmt_bind_param($stmt, "ss", $param_email, $param_cpf);
                $param_email = $email;
                $param_cpf = $cpf;
                if (mysqli_stmt_execute($stmt)) {
                    mysqli_stmt_store_result($stmt);
                    if (mysqli_stmt_num_rows($stmt) > 0) {
                        $erro_cadastro = "Este email ou CPF já está em uso.";
                    }
                } else {
                    echo "Ops! Algo deu errado. Tente novamente mais tarde.";
                }
                mysqli_stmt_close($stmt);
            }
        }

        if (empty($erro_cadastro)) {
            $sql = "INSERT INTO usuarios (nome, email, cpf, senha) VALUES (?, ?, ?, ?)";
            if ($stmt = mysqli_prepare($link, $sql)) {
                mysqli_stmt_bind_param($stmt, "ssss", $param_nome, $param_email, $param_cpf, $param_senha);
                
                $param_nome = $nome;
                $param_email = $email;
                $param_cpf = $cpf;
                $param_senha = password_hash($senha, PASSWORD_DEFAULT); 
                
                if (mysqli_stmt_execute($stmt)) {
                    header("location: login.php?cadastro=sucesso");
                } else {
                    echo "Ops! Algo deu errado. Tente novamente mais tarde.";
                }
                mysqli_stmt_close($stmt);
            }
        }
    }

    if ($_SERVER["REQUEST_METHOD"] == "POST" && isset($_POST['login'])) {
        $email = trim($_POST["email"]);
        $senha = trim($_POST["senha"]);

        if (empty($email) || empty($senha)) {
            $erro_login = "Por favor, preencha todos os campos.";
        } else {
            $sql = "SELECT id, nome, email, cpf, senha FROM usuarios WHERE email = ?";
            if ($stmt = mysqli_prepare($link, $sql)) {
                mysqli_stmt_bind_param($stmt, "s", $param_email);
                $param_email = $email;
                
                if (mysqli_stmt_execute($stmt)) {
                    mysqli_stmt_store_result($stmt);
                    
                    if (mysqli_stmt_num_rows($stmt) == 1) {
                        mysqli_stmt_bind_result($stmt, $id, $nome, $email_db, $cpf_db, $hashed_senha);
                        if (mysqli_stmt_fetch($stmt)) {
                            if (password_verify($senha, $hashed_senha)) {
                                session_regenerate_id();
                                $_SESSION["loggedin"] = true;
                                $_SESSION["id"] = $id;
                                $_SESSION["nome"] = $nome;
                                $_SESSION["email"] = $email_db;
                                $_SESSION["cpf"] = $cpf_db;
                                
                                header("location: index.php");
                            } else {
                                $erro_login = "A senha que você inseriu não é válida.";
                            }
                        }
                    } else {
                        $erro_login = "Nenhuma conta encontrada com esse email.";
                    }
                } else {
                    echo "Ops! Algo deu errado. Tente novamente mais tarde.";
                }
                mysqli_stmt_close($stmt);
            }
        }
    }

    mysqli_close($link);
    ?>

    <?php include 'header.php'; ?>

    <div class="container">
        <div style="display: flex; justify-content: space-around; flex-wrap: wrap; gap: 20px;">
            <div class="form-container" style="flex: 1; min-width: 300px;">
                <h2>Login</h2>
                <p>Acesse sua conta para continuar.</p>
                <?php if (!empty($erro_login)) echo '<div class="alert alert-danger">' . $erro_login . '</div>'; ?>
                
                <form action="login.php" method="post">
                    <input type="email" name="email" class="form-control mb-2" placeholder="Seu Email" required>
                    <input type="password" name="senha" class="form-control mb-3" placeholder="Sua Senha" required>
                    <button type="submit" name="login" class="btn btn-primary w-100">Entrar</button>
                </form>
            </div>
            <div class="form-container" style="flex: 1; min-width: 300px;">
                <h2>Ainda não tem conta? Cadastre-se</h2>
                <p>É rápido e fácil.</p>
                <?php 
                    if (!empty($erro_cadastro)) echo '<div class="alert alert-danger">' . $erro_cadastro . '</div>'; 
                    if (isset($_GET['cadastro']) && $_GET['cadastro'] == 'sucesso') echo '<div class="alert alert-success">Cadastro realizado com sucesso! Faça seu login.</div>';
                ?>
                <form action="login.php" method="post">
                    <input type="text" name="nome" class="form-control mb-2" placeholder="Nome Completo" required>
                    <input type="email" name="email" class="form-control mb-2" placeholder="Seu Email" required>
                    <input type="text" name="cpf" class="form-control mb-2" placeholder="CPF (apenas números)" required>
                    <input type="password" name="senha" class="form-control mb-3" placeholder="Crie uma Senha (mín. 6 caracteres)" required>
                    <button type="submit" name="cadastrar" class="btn btn-success w-100">Cadastrar</button>
                </form>
            </div>
        </div>
    </div>

    <?php include 'footer.php'; ?>
├─ logout.php
    <?php
    session_start();
    
    $_SESSION = array();
    
    session_destroy();
    
    header("location: index.php");
    exit;
    ?>
├─ minha_conta.php
    <?php
    include 'header.php';

    if (!isset($_SESSION['loggedin']) || $_SESSION['loggedin'] !== true) {
        header('location: login.php');
        exit;
    }

    function validaCPF($cpf) {
        $cpf = preg_replace('/[^0-9]/is', '', $cpf);
        if (strlen($cpf) != 11) { return false; }
        if (preg_match('/(\d)\1{10}/', $cpf)) { return false; }
        for ($t = 9; $t < 11; $t++) {
            for ($d = 0, $c = 0; $c < $t; $c++) { $d += $cpf[$c] * (($t + 1) - $c); }
            $d = ((10 * $d) % 11) % 10;
            if ($cpf[$c] != $d) { return false; }
        }
        return true;
    }

    if (isset($_POST['atualizar_dados'])) {
        $nome = trim($_POST['nome']);
        $email = trim($_POST['email']);
        $id_usuario = $_SESSION['id'];
        $erros_dados = [];

        $cpf_para_salvar = $_SESSION['cpf'];
        if (empty($_SESSION['cpf']) && !empty($_POST['cpf'])) {
            $cpf_novo = trim($_POST['cpf']);
            if (validaCPF($cpf_novo)) {
                $sql_check_cpf = "SELECT id FROM usuarios WHERE cpf = ? AND id != ?";
                if($stmt_check = mysqli_prepare($link, $sql_check_cpf)){
                    mysqli_stmt_bind_param($stmt_check, "si", $cpf_novo, $id_usuario);
                    mysqli_stmt_execute($stmt_check);
                    mysqli_stmt_store_result($stmt_check);
                    if(mysqli_stmt_num_rows($stmt_check) > 0){
                        $erros_dados[] = "Este CPF já está em uso por outra conta.";
                    } else {
                        $cpf_para_salvar = $cpf_novo;
                    }
                    mysqli_stmt_close($stmt_check);
                }
            } else {
                $erros_dados[] = "O CPF informado é inválido.";
            }
        }
        
        if (empty($nome)) $erros_dados[] = "O nome não pode ficar em branco.";
        if (empty($email) || !filter_var($email, FILTER_VALIDATE_EMAIL)) $erros_dados[] = "Por favor, insira um email válido.";

        $sql_check_email = "SELECT id FROM usuarios WHERE email = ? AND id != ?";
        if($stmt_check = mysqli_prepare($link, $sql_check_email)){
            mysqli_stmt_bind_param($stmt_check, "si", $email, $id_usuario);
            mysqli_stmt_execute($stmt_check);
            mysqli_stmt_store_result($stmt_check);
            if(mysqli_stmt_num_rows($stmt_check) > 0){
                $erros_dados[] = "Este email já está em uso por outra conta.";
            }
            mysqli_stmt_close($stmt_check);
        }
        
        if (empty($erros_dados)) {
            $sql = "UPDATE usuarios SET nome = ?, email = ?, cpf = ? WHERE id = ?";
            if ($stmt = mysqli_prepare($link, $sql)) {
                mysqli_stmt_bind_param($stmt, "sssi", $nome, $email, $cpf_para_salvar, $id_usuario);
                if (mysqli_stmt_execute($stmt)) {
                    $_SESSION['nome'] = $nome;
                    $_SESSION['email'] = $email;
                    if (!empty($cpf_para_salvar)) $_SESSION['cpf'] = $cpf_para_salvar;
                    $_SESSION['flash_message'] = ['type' => 'success', 'text' => 'Seus dados foram atualizados com sucesso!'];
                } else {
                    $_SESSION['flash_message'] = ['type' => 'danger', 'text' => 'Ocorreu um erro ao atualizar seus dados.'];
                }
                mysqli_stmt_close($stmt);
            }
        } else {
            $_SESSION['flash_message'] = ['type' => 'danger', 'text' => implode("<br>", $erros_dados)];
        }
        header("Location: minha_conta.php");
        exit();
    }

    if (isset($_POST['atualizar_senha'])) {
        $senha_atual = trim($_POST['senha_atual']);
        $nova_senha = trim($_POST['nova_senha']);
        $confirma_nova_senha = trim($_POST['confirma_nova_senha']);
        $id_usuario = $_SESSION['id'];
        $erros_senha = [];

        if (empty($senha_atual) || empty($nova_senha) || empty($confirma_nova_senha)) {
            $erros_senha[] = "Todos os campos de senha são obrigatórios.";
        }
        if ($nova_senha !== $confirma_nova_senha) {
            $erros_senha[] = "A nova senha e a confirmação não coincidem.";
        }
        if (strlen($nova_senha) < 6) {
            $erros_senha[] = "A nova senha deve ter no mínimo 6 caracteres.";
        }

        if(empty($erros_senha)) {
            $sql_get_pass = "SELECT senha FROM usuarios WHERE id = ?";
            if ($stmt_get_pass = mysqli_prepare($link, $sql_get_pass)) {
                mysqli_stmt_bind_param($stmt_get_pass, "i", $id_usuario);
                mysqli_stmt_execute($stmt_get_pass);
                
                mysqli_stmt_store_result($stmt_get_pass);
                
                mysqli_stmt_bind_result($stmt_get_pass, $hashed_senha_db);
                
                if (mysqli_stmt_fetch($stmt_get_pass)) {
                    if (password_verify($senha_atual, $hashed_senha_db)) {
                        $sql_update_pass = "UPDATE usuarios SET senha = ? WHERE id = ?";
                        if ($stmt_update_pass = mysqli_prepare($link, $sql_update_pass)) {
                            $param_nova_senha_hash = password_hash($nova_senha, PASSWORD_DEFAULT);
                            mysqli_stmt_bind_param($stmt_update_pass, "si", $param_nova_senha_hash, $id_usuario);
                            
                            if (mysqli_stmt_execute($stmt_update_pass)) {
                                $_SESSION['flash_message'] = ['type' => 'success', 'text' => 'Senha alterada com sucesso!'];
                            } else {
                                $_SESSION['flash_message'] = ['type' => 'danger', 'text' => 'Ocorreu um erro ao atualizar sua senha.'];
                            }
                            mysqli_stmt_close($stmt_update_pass);
                        }
                    } else {
                        $_SESSION['flash_message'] = ['type' => 'danger', 'text' => 'A senha atual informada está incorreta.'];
                    }
                }
            } else {
                $_SESSION['flash_message'] = ['type' => 'danger', 'text' => 'Ocorreu um erro no servidor.'];
            }
            if(isset($stmt_get_pass)) mysqli_stmt_close($stmt_get_pass);

        } else {
            $_SESSION['flash_message'] = ['type' => 'danger', 'text' => implode("<br>", $erros_senha)];
        }
        
        header("Location: minha_conta.php");
        exit();
    }
    ?>

    <h2>Minha Conta</h2>
    <div class="row">
        <div class="col-md-6">
            <div class="card mb-4">
                <div class="card-header">Alterar meus dados</div>
                <div class="card-body">
                    <form action="minha_conta.php" method="POST">
                        <div class="mb-3">
                            <label for="nome" class="form-label">Nome</label>
                            <input type="text" class="form-control" id="nome" name="nome" value="<?php echo htmlspecialchars($_SESSION['nome']); ?>" required>
                        </div>
                        <div class="mb-3">
                            <label for="email" class="form-label">Email</label>
                            <input type="email" class="form-control" id="email" name="email" value="<?php echo htmlspecialchars($_SESSION['email']); ?>" required>
                        </div>
                        <div class="mb-3">
                            <label for="cpf" class="form-label">CPF</label>
                            <?php if (empty($_SESSION['cpf'])): ?>
                                <input type="text" class="form-control" id="cpf" name="cpf" placeholder="Digite seu CPF (apenas números)" required>
                                <div class="form-text">Este dado é necessário para finalizar compras e não poderá ser alterado depois.</div>
                            <?php else: ?>
                                <input type="text" class="form-control" id="cpf" name="cpf" value="<?php echo htmlspecialchars($_SESSION['cpf']); ?>" disabled readonly>
                                <div class="form-text">O CPF não pode ser alterado.</div>
                            <?php endif; ?>
                        </div>
                        <button type="submit" name="atualizar_dados" class="btn btn-primary">Salvar Alterações</button>
                    </form>
                </div>
            </div>
        </div>

        <div class="col-md-6">
            <div class="card">
                <div class="card-header">Alterar Senha</div>
                <div class="card-body">
                    <form action="minha_conta.php" method="POST">
                        <div class="mb-3">
                            <label for="senha_atual" class="form-label">Senha Atual</label>
                            <input type="password" class="form-control" id="senha_atual" name="senha_atual" required>
                        </div>
                        <div class="mb-3">
                            <label for="nova_senha" class="form-label">Nova Senha</label>
                            <input type="password" class="form-control" id="nova_senha" name="nova_senha" required>
                        </div>
                        <div class="mb-3">
                            <label for="confirma_nova_senha" class="form-label">Confirmar Nova Senha</label>
                            <input type="password" class="form-control" id="confirma_nova_senha" name="confirma_nova_senha" required>
                        </div>
                        <button type="submit" name="atualizar_senha" class="btn btn-primary">Alterar Senha</button>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <?php 
    include 'footer.php'; 
    ?>
├─ pedidos.php
    <?php
    include 'header.php';

    if (!isset($_SESSION['loggedin']) || $_SESSION['loggedin'] !== true) {
        header('location: login.php');
        exit;
    }

    function callAsaasAPI(string $method, string $url, array|string|null $data = null) {
        $curl = curl_init();
        $headers = ['Content-Type: application/json', 'access_token: ' . ASAAS_API_KEY, 'User-Agent: Acougue Nosso'];
        if ($method == "POST") {
            curl_setopt($curl, CURLOPT_POST, 1);
            if ($data) curl_setopt($curl, CURLOPT_POSTFIELDS, $data);
        } else {
            if ($data) $url = sprintf("%s?%s", $url, http_build_query($data));
        }
        curl_setopt($curl, CURLOPT_URL, $url);
        curl_setopt($curl, CURLOPT_HTTPHEADER, $headers);
        curl_setopt($curl, CURLOPT_RETURNTRANSFER, 1);
        curl_setopt($curl, CURLOPT_HTTPAUTH, CURLAUTH_BASIC);
        $result = curl_exec($curl);
        $http_code = curl_getinfo($curl, CURLINFO_HTTP_CODE);
        curl_close($curl);
        return ['body' => json_decode($result, true), 'http_code' => $http_code];
    }

    // Função para traduzir e colorir o status
    function formatarStatus($status) {
        $traducao = [
            'PENDING' => 'Pendente',
            'RECEIVED' => 'Pago',
            'CONFIRMED' => 'Pago',
            'OVERDUE' => 'Vencido',
            'DELETED' => 'Cancelado',
            'REFUNDED' => 'Devolvido'
        ];
        $cor = 'bg-secondary';
        if ($status === 'RECEIVED' || $status === 'CONFIRMED') $cor = 'bg-success';
        if ($status === 'OVERDUE' || $status === 'DELETED') $cor = 'bg-danger';

        $status_traduzido = isset($traducao[$status]) ? $traducao[$status] : $status;

        return '<span class="badge ' . $cor . '">' . htmlspecialchars($status_traduzido) . '</span>';
    }

    $id_usuario = $_SESSION['id'];
    $sql_pedidos = "SELECT * FROM pedidos WHERE id_usuario = ? ORDER BY data_criacao DESC";
    ?>

    <div class="container">
        <h2 class="mb-4">Meus Pedidos</h2>
        <div class="table-responsive">
            <table class="table table-hover align-middle">
                <thead class="table-light">
                    <tr>
                        <th>Pedido</th>
                        <th>Data</th>
                        <th>Itens</th>
                        <th>Valor</th>
                        <th>Status</th>
                        <th>Ação</th>
                    </tr>
                </thead>
                <tbody>
                    <?php
                    if ($stmt = mysqli_prepare($link, $sql_pedidos)) {
                        mysqli_stmt_bind_param($stmt, "i", $id_usuario);
                        mysqli_stmt_execute($stmt);
                        $result = mysqli_stmt_get_result($stmt);

                        if (mysqli_num_rows($result) > 0) {
                            while ($pedido = mysqli_fetch_assoc($result)) {
                                $status_local = $pedido['status'];
                                $id_cobranca_asaas = $pedido['id_asaas_cobranca'];
                                
                                // Para pedidos que não estão em um estado final, verifica o status atual na Asaas
                                if (!in_array($status_local, ['RECEIVED', 'CONFIRMED', 'DELETED', 'REFUNDED'])) {
                                    $response_api = callAsaasAPI('GET', ASAAS_API_URL . '/paymentLinks/' . $id_cobranca_asaas);
                                    if($response_api['http_code'] == 200 && isset($response_api['body']['payment']['status'])) {
                                        $status_real = $response_api['body']['payment']['status'];
                                        
                                        if ($response_api['body']['deleted'] === true) {
                                            $status_real = 'DELETED';
                                        }

                                        if($status_real !== $status_local) {
                                            // Atualiza o status no banco de dados local se mudou
                                            $status_local = $status_real;
                                            $id_pagamento_real = $response_api['body']['payment']['id'];
                                            $sql_update = "UPDATE pedidos SET status = ?, id_asaas_pagamento = ? WHERE id = ?";
                                            if($stmt_update = mysqli_prepare($link, $sql_update)){
                                                mysqli_stmt_bind_param($stmt_update, "ssi", $status_local, $id_pagamento_real, $pedido['id']);
                                                mysqli_stmt_execute($stmt_update);
                                                mysqli_stmt_close($stmt_update);
                                            }
                                        }
                                    }
                                }
                                
                                echo '<tr>';
                                echo '<td>#' . htmlspecialchars($pedido['id']) . '</td>';
                                echo '<td>' . date('d/m/Y', strtotime($pedido['data_criacao'])) . '</td>';
                                
                                $itens_html = '<ul>';
                                $itens = json_decode($pedido['itens_pedido'], true);
                                if (is_array($itens)) {
                                    foreach($itens as $item){
                                        $itens_html .= '<li>' . htmlspecialchars($item['nome']) . ' (' . $item['quantidade'] . 'kg)</li>';
                                    }
                                }
                                $itens_html .= '</ul>';
                                echo '<td>' . $itens_html . '</td>';
                                
                                echo '<td>R$ ' . number_format($pedido['valor_total'], 2, ',', '.') . '</td>';
                                echo '<td>' . formatarStatus($status_local) . '</td>';
                                
                                if($status_local === 'PENDING' || $status_local === 'OVERDUE'){
                                    echo '<td><a href="' . htmlspecialchars($pedido['link_pagamento']) . '" target="_blank" class="btn btn-success btn-sm">Pagar</a></td>';
                                } else {
                                    echo '<td>-</td>';
                                }
                                echo '</tr>';
                            }
                        } else {
                            echo '<tr><td colspan="6" class="text-center">Você ainda não fez nenhum pedido.</td></tr>';
                        }
                        mysqli_stmt_close($stmt);
                    }
                    mysqli_close($link);
                    ?>
                </tbody>
            </table>
        </div>
    </div>

    <?php include 'footer.php'; ?>
├─ produtos.php
    <?php include 'header.php'; ?>

    <div class="text-center mb-4">
        <a href="produtos.php" class="btn btn-outline-danger">Todos</a>
        <a href="produtos.php?categoria=Bovino" class="btn btn-outline-danger">Bovinos</a>
        <a href="produtos.php?categoria=Suíno" class="btn btn-outline-danger">Suínos</a>
        <a href="produtos.php?categoria=Aves" class="btn btn-outline-danger">Aves</a>
    </div>

    <h2 class="mb-4">Nossos Produtos</h2>
    <div class="row row-cols-1 row-cols-md-2 row-cols-lg-4 g-4">
        <?php
        $categoria_filtro = isset($_GET['categoria']) ? $_GET['categoria'] : '';
        $sql = "SELECT * FROM produtos";
        if (!empty($categoria_filtro)) {
            $sql .= " WHERE categoria = ?";
        }

        $stmt = mysqli_prepare($link, $sql);
        if (!empty($categoria_filtro)) {
            mysqli_stmt_bind_param($stmt, "s", $categoria_filtro);
        }
        
        mysqli_stmt_execute($stmt);
        $result = mysqli_stmt_get_result($stmt);

        if(mysqli_num_rows($result) > 0){
            while($produto = mysqli_fetch_assoc($result)){
                echo '<div class="col">';
                echo '  <div class="card h-100">';
                echo '      <img src="' . htmlspecialchars($produto['imagem']) . '" class="card-img-top" style="height: 200px; object-fit: cover;" alt="' . htmlspecialchars($produto['nome']) . '">';
                echo '      <div class="card-body d-flex flex-column">';
                echo '          <h5 class="card-title">' . htmlspecialchars($produto['nome']) . '</h5>';
                echo '          <p class="card-text text-muted"><small>' . htmlspecialchars($produto['descricao']) . '</small></p>';
                echo '          <p class="card-text fs-4 fw-bold mt-auto">R$ ' . number_format($produto['preco'], 2, ',', '.') . ' /kg</p>';
                echo '          <form action="carrinho_acoes.php" method="post" class="form-add-to-cart">';
                echo '              <input type="hidden" name="acao" value="add">';
                echo '              <input type="hidden" name="id" value="' . $produto['id'] . '">';
                echo '              <div class="input-group">';
                echo '                  <input type="number" name="quantidade" class="form-control" value="1" min="1" step="0.1">';
                echo '                  <button type="submit" class="btn btn-danger">Adicionar</button>';
                echo '              </div>';
                echo '          </form>';
                echo '      </div>';
                echo '  </div>';
                echo '</div>';
            }
        } else{
            echo "<p class='col-12'>Nenhum produto encontrado nesta categoria.</p>";
        }
        mysqli_stmt_close($stmt);
        mysqli_close($link);
        ?>
    </div>

    <?php include 'footer.php'; ?>
├─ README.md
    # site-acougue-v2
    Site de açougue atualizado para projeto Fatec
├─ tree_acougue.ini
└─ webhook_asaas.php
    <?php
    $log_file = __DIR__ . '/webhook_log.txt';

    function log_message($message) {
        global $log_file;
        file_put_contents($log_file, date("Y-m-d H:i:s") . " - " . $message . "\n", FILE_APPEND);
    }

    log_message("--- Nova Notificação Recebida ---");

    require_once 'config.php';

    $webhook_token = '';
    if (function_exists('getallheaders')) {
        $headers = getallheaders();
        $lc_headers = array_change_key_case($headers, CASE_LOWER);
        if (isset($lc_headers['asaas-access-token'])) {
            $webhook_token = trim($lc_headers['asaas-access-token']);
        }
    }
    if (empty($webhook_token) && isset($_SERVER['HTTP_ASAAS_ACCESS_TOKEN'])) {
        $webhook_token = trim($_SERVER['HTTP_ASAAS_ACCESS_TOKEN']);
    }


    if (empty($webhook_token) || !hash_equals(ASAAS_WEBHOOK_SECRET, $webhook_token)) {
        log_message("ERRO: Falha na autenticação do webhook. Token recebido: '{$webhook_token}'. Token esperado: '" . ASAAS_WEBHOOK_SECRET . "'");
        http_response_code(401);
        die('Acesso negado.');
    }

    log_message("INFO: Token de segurança validado com sucesso.");

    $json_body = file_get_contents('php://input');
    log_message("CORPO DA REQUISIÇÃO: " . $json_body);

    $payload = json_decode($json_body, true);

    if (json_last_error() !== JSON_ERROR_NONE) {
        log_message("ERRO: Payload JSON inválido.");
        http_response_code(400);
        die('Payload inválido.');
    }

    if (isset($payload['event']) && isset($payload['payment'])) {
        $pagamento = $payload['payment'];
        
        if (isset($pagamento['externalReference']) && !empty($pagamento['externalReference'])) {
            
            $local_pedido_id = $pagamento['externalReference'];
            $id_pagamento_asaas = $pagamento['id'];
            $novo_status = $pagamento['status'];

            if ($payload['event'] === 'PAYMENT_DELETED') {
                $novo_status = 'DELETED';
            }

            log_message("INFO: Processando evento '{$payload['event']}'. Pedido Local ID: '{$local_pedido_id}'. Novo Status: '{$novo_status}'. Asaas Payment ID: '{$id_pagamento_asaas}'");

            $sql_update = "UPDATE pedidos SET status = ?, id_asaas_pagamento = ? WHERE id = ?";
            
            if ($stmt = mysqli_prepare($link, $sql_update)) {
                mysqli_stmt_bind_param($stmt, "ssi", $novo_status, $id_pagamento_asaas, $local_pedido_id);
                mysqli_stmt_execute($stmt);
                
                if (mysqli_stmt_affected_rows($stmt) > 0) {
                    log_message("SUCESSO: Pedido local #{$local_pedido_id} atualizado para '{$novo_status}'.");
                } else {
                    log_message("AVISO: Nenhum pedido encontrado no banco de dados com o ID local '{$local_pedido_id}' ou o status já era o mesmo.");
                }
                
                mysqli_stmt_close($stmt);
                http_response_code(200);
                
            } else {
                log_message("ERRO: Falha ao preparar a query de atualização. Erro: " . mysqli_error($link));
                http_response_code(500);
            }
        } else {
            $pagamento_id_log = isset($pagamento['paymentLink']) ? $pagamento['paymentLink'] : (isset($pagamento['id']) ? $pagamento['id'] : 'N/A');
            log_message("AVISO: Notificação recebida para a cobrança Asaas ID '{$pagamento_id_log}', mas não continha 'externalReference'. Ignorando.");
            http_response_code(200);
        }
    } else {
        log_message("ERRO: Payload JSON não continha os campos 'event' e 'payment'.");
        http_response_code(400);
    }

    mysqli_close($link);
    exit();
    ?>
